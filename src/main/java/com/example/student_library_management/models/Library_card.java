package com.example.student_library_management.models;

import com.example.student_library_management.Enums.CardStatus;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Entity
@Table(name="Card")
public class Library_card {

    // plan is to save this card in DB
    // Before saving I have to set its attributes
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id; // autoGenerated
    @CreationTimestamp // auto time stamp when an entry is created
     private Date createdOn; // autogenerated

    @UpdateTimestamp // Sets time when an entry is updated
    private Date updatedOn; // autoGenerated
    @Enumerated(value=EnumType.STRING)

    private CardStatus cardStatus; // set this attribute

    public CardStatus getCardStatus() {
        return cardStatus;
    }

    public void setCardStatus(CardStatus cardStatus) {
        this.cardStatus = cardStatus;
    }

    public Student getStudent() {
        return student;
    }

    public void setStudent(Student student) {
        this.student = student;
    }

    @OneToOne
    @JoinColumn
    Student student; // this variable is used in parent class
    // while doing the bidirectional mapping

    // card is parent with respect to book
    @OneToMany(mappedBy = "card", cascade = CascadeType.ALL)
    List<Book> booksIssued= new ArrayList<>();


    // Connecting the card class to transaction
    // Bidirectional mapping
    @OneToMany(mappedBy = "card",cascade = CascadeType.ALL)
    private List<Transactions> list= new ArrayList<>();
    public Library_card() {
    }

    public Library_card(int id, Date createdOn, Date updatedOn) {
        this.id = id;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public Date getCreatedOn() {
        return createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    public Date getUpdatedOn() {
        return updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    public List<Book> getBooksIssued() {
        return booksIssued;
    }

    public void setBooksIssued(List<Book> booksIssued) {
        this.booksIssued = booksIssued;
    }

    public List<Transactions> getList() {
        return list;
    }

    public void setList(List<Transactions> list) {
        this.list = list;
    }
}
