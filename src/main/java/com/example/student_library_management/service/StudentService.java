package com.example.student_library_management.service;

import com.example.student_library_management.DTOs.StudentUpdateMobileRequestDTO;
import com.example.student_library_management.Enums.CardStatus;
import com.example.student_library_management.Repositories.StudentRepository;
import com.example.student_library_management.models.Library_card;
import com.example.student_library_management.models.Student;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {
    @Autowired
    StudentRepository studentrepository;
    public String createStudent(Student student){
        // Student from postman is already the basic attributes set

        // Card should also be autogenerated when create student function is called
        Library_card card= new Library_card();
        card.setCardStatus(CardStatus.ACTIVATED);
        card.setStudent(student); // foreign key column attribute will come from here
        student.setCard((card));
        // if there was a unidirectional mapping we had to save both of them
        // but we are using bidirectional mappping so child will automatically be saved
        studentrepository.save((student));
        //By cascading effect child will automatically be saved

        return "Student card added";

    }
    public String findNameByEmail(String email){
        Student student= studentrepository.findByEmail(email);
        return student.getName();

    }
    public String updateMobNo(StudentUpdateMobileRequestDTO studentRequestDTO){

        // Convert DTO to entity : so that it can be saved better

        // here if we will directly use .save function other attributes will
        // become null
        // first we will try to find originaldata
        Student originalStudent=studentrepository.findById(studentRequestDTO.getId()).get();
        // we will keep the other properties as it is and only change required parameters
        // always entity object is being saved
        originalStudent.setMobile(studentRequestDTO.getMobile());
        studentrepository.save(originalStudent);
        return "Updated Successfully";
    }
}
